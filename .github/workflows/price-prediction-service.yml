name: Price Prediction Service - Flask API Test Workflow

on:
  pull_request:
    branches: [develop]
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flask flask-cors pandas scikit-learn openpyxl

      - name: Set PYTHONPATH
        run: |
          echo "PYTHONPATH=${{ github.workspace }}/back-end/price-prediction-service" >> $GITHUB_ENV

      - name: Train model
        working-directory: back-end/price-prediction-service
        run: |
          python app.py &
          sleep 15
          pkill -f flask || true

      - name: Run tests with HTML report
        working-directory: back-end/price-prediction-service
        run: |
          python -m unittest test_app.py -v 2>&1 | tee test-results.txt

      - name: Format test results
        if: always()
        working-directory: back-end/price-prediction-service
        run: |
          echo "### Price Prediction Service Test Results" > formatted-results.md
          echo "\`\`\`" >> formatted-results.md
          cat test-results.txt >> formatted-results.md
          echo "\`\`\`" >> formatted-results.md

      - name: Post test results
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const results = fs.readFileSync('back-end/price-prediction-service/formatted-results.md', 'utf8');
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: results
            });